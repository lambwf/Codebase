files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
}
}
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="EUA","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
library(openxlsx)
library(tidyverse)
library(countrycode)
files_countries <- data.frame(files=list.files(path = "sources/CRFs/"))
files_countries <- files_countries %>%
mutate(country = str_extract(files, "^.{3}")) %>%
mutate(gwp = str_extract(files, ".{3}$")) %>%
mutate(year_submission = str_extract(files, "\\d{4}"))
### get total national emissions per country, per year, per gas
data_crfs <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
for (i in 1:length(files_countries$files)) {
files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
}
}
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) #%>%
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="uea","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
library(openxlsx)
library(tidyverse)
library(countrycode)
files_countries <- data.frame(files=list.files(path = "sources/CRFs/"))
files_countries <- files_countries %>%
mutate(country = str_extract(files, "^.{3}")) %>%
mutate(gwp = str_extract(files, ".{3}$")) %>%
mutate(year_submission = str_extract(files, "\\d{4}"))
### get total national emissions per country, per year, per gas
data_crfs <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
for (i in 1:length(files_countries$files)) {
files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
}
}
blarg <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="uea","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
View(files)
View(files_countries)
blarg <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
View(blarg)
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
View(data_crfs)
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country)) %>%
select(country,iso,everything())
library(openxlsx)
library(tidyverse)
library(countrycode)
files_countries <- data.frame(files=list.files(path = "sources/CRFs/"))
files_countries <- files_countries %>%
mutate(country = str_extract(files, "^.{3}")) %>%
mutate(gwp = str_extract(files, ".{3}$")) %>%
mutate(year_submission = str_extract(files, "\\d{4}"))
### get total national emissions per country, per year, per gas
data_crfs <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
for (i in 1:length(files_countries$files)) {
files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
}
}
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country)) %>%
select(country,iso,everything())
save(data_crfs,file="data/data_crfs_2023.RData")
View(sheet)
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
sheet_lulucf = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As3",startRow = 5,cols = 1:9)
View(sheet_lulucf)
sheet_lulucf = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As2",startRow = 5,cols = 1:9)
names(sheet_lulucf) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet_lulucf <- sheet_lulucf %>% filter(category=="4.  Land use, land-use change and forestry  (4)")
sheet_lulucf <- gather(sheet_lulucf,gas,value,-category)
sheet_lulucf <- sheet_lulucf %>%
filter(gas=="CO2") %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
library(openxlsx)
library(tidyverse)
library(countrycode)
files_countries <- data.frame(files=list.files(path = "sources/CRFs/"))
files_countries <- files_countries %>%
mutate(country = str_extract(files, "^.{3}")) %>%
mutate(gwp = str_extract(files, ".{3}$")) %>%
mutate(year_submission = str_extract(files, "\\d{4}"))
### get total national emissions per country, per year, per gas
data_crfs <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
for (i in 1:length(files_countries$files)) {
files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
sheet_lulucf = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As2",startRow = 5,cols = 1:9)
names(sheet_lulucf) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet_lulucf <- sheet_lulucf %>% filter(category=="4.  Land use, land-use change and forestry  (4)")
sheet_lulucf <- gather(sheet_lulucf,gas,value,-category)
sheet_lulucf <- sheet_lulucf %>%
filter(gas=="CO2") %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
data_crfs <- rbind(data_crfs,sheet_lulucf)
}
}
View(data_crfs)
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country)) %>%
select(country,iso,everything())
data_crfs <- data_crfs %>%
mutate(gas=ifelse(category=="4.  Land use, land-use change and forestry  (4)","CO2 LULUCF",gas))
data_crfs <- spread(data_crfs,gas,value)
data_crfs <- gather(data_crfs,gas,value,CH4:SF6)
blarg <- data_crfs %>%
mutate(gas=ifelse(category=="4.  Land use, land-use change and forestry  (4)","CO2 LULUCF",gas)) %>%
select(-category)
data_crfs <- spread(data_crfs,gas,value)
library(openxlsx)
library(tidyverse)
library(countrycode)
files_countries <- data.frame(files=list.files(path = "sources/CRFs/"))
files_countries <- files_countries %>%
mutate(country = str_extract(files, "^.{3}")) %>%
mutate(gwp = str_extract(files, ".{3}$")) %>%
mutate(year_submission = str_extract(files, "\\d{4}"))
### get total national emissions per country, per year, per gas
data_crfs <- data.frame(country=NA,year_submission=NA,gwp=NA,gas=NA,year=NA,category=NA,value=NA)
for (i in 1:length(files_countries$files)) {
files_crfs <- data.frame(files=list.files(path = paste0("sources/CRFs/",files_countries$files[i])))
files_crfs <- files_crfs %>%
mutate(year= str_extract(files, "(?<=_\\d{4}_)\\d{4}"))
for (j in 1:length(files$files)) {
sheet = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As1",startRow = 5,cols = 1:9)
names(sheet) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet <- sheet %>% filter(category=="Total national emissions and removals")
sheet <- gather(sheet,gas,value,-category)
sheet <- sheet %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
sheet_lulucf = read.xlsx(paste0("sources/CRFs/",files_countries$files[i],"/",files_crfs$files[j]),sheet="Summary1.As2",startRow = 5,cols = 1:9)
names(sheet_lulucf) <- c("category","CO2","CH4","N2O","HFCs","PFCs","HFCs/PFCs","SF6","NF3")
sheet_lulucf <- sheet_lulucf %>% filter(category=="4.  Land use, land-use change and forestry  (4)")
sheet_lulucf <- gather(sheet_lulucf,gas,value,-category)
sheet_lulucf <- sheet_lulucf %>%
filter(gas=="CO2") %>%
mutate(country = files_countries$country[i]) %>%
mutate(year_submission = files_countries$year_submission[i]) %>%
mutate(gwp = files_countries$gwp[i]) %>%
mutate(year = files_crfs$year[j]) %>%
select(country,year_submission,gwp,gas,year,category,value)
data_crfs <- rbind(data_crfs,sheet)
data_crfs <- rbind(data_crfs,sheet_lulucf)
}
}
data_crfs <- data_crfs %>%
filter(!is.na(country)) %>%
mutate(iso=countrycode(country,"iso3c","iso3c")) %>%
mutate(iso=ifelse(country=="eua","EU27",iso)) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country)) %>%
select(country,iso,everything())
blarg <- data_crfs %>%
mutate(gas=ifelse(category=="4.  Land use, land-use change and forestry  (4)","CO2 LULUCF",gas)) %>%
select(-category)
blarg <- spread(blarg,gas,value)
View(blarg)
blarg <- blarg %>%
mutate(CO2=CO2-`CO2 LULUCF`)
blarg <- data_crfs %>%
mutate(gas=ifelse(category=="4.  Land use, land-use change and forestry  (4)","CO2 LULUCF",gas)) %>%
select(-category) %>%
mutate(value=as.numeric(value))
blarg <- spread(blarg,gas,value)
blarg <- blarg %>%
mutate(CO2=CO2-`CO2 LULUCF`)
blarg <- gather(blarg,gas,value,CH4:SF6)
data_crfs <- data_crfs %>%
mutate(gas=ifelse(category=="4.  Land use, land-use change and forestry  (4)","CO2 LULUCF",gas)) %>%
select(-category) %>%
mutate(value=as.numeric(value))
data_crfs <- spread(data_crfs,gas,value)
data_crfs <- data_crfs %>%
mutate(CO2=CO2-`CO2 LULUCF`)
data_crfs <- gather(data_crfs,gas,value,CH4:SF6)
save(data_crfs,file="data/data_crfs_2023.RData")
#library(RColorBrewer)
#ggplot <- function(...) ggplot2::ggplot(...) + scale_fill_brewer(palette="Set2")
theme_wl <- function() {
font <- "sans"
theme_bw() %+replace%
theme(
# Grid elements
panel.grid.minor = element_blank(),    #strip minor gridlines
axis.ticks = element_line(color="#636363",size = 0.7),
# Border lines
panel.border = element_rect(color="#636363",fill=NA,size = 0.7),
panel.background = element_blank(),
# Text elements
plot.title = element_text(             #title
family = font,            #set font family
size = 14,                #set font size
face = 'bold',            #bold typeface
hjust = 0,                #left align
vjust = 3,                #raise slightly
color = '#636363'),       #color
plot.subtitle = element_text(
family = font,
size = 12,
hjust = 0,
vjust = 2,
color = '#636363'),
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 0,                #right align
color = '#bdbdbd'),       #color
axis.title = element_text(             #axis titles
family = font,            #font family
size = 10,                #font size
color = '#636363'),       #color
axis.text = element_text(              #axis text
family = font,            #axis famuly
size = 9,                 #font size
color = '#636363'),       #color
axis.text.x = element_text(            #margin for axis text
margin=margin(5, b = 10)),
text = element_text(
family = font,
color = '#636363')
)
}
theme_wl_emissions <- function() {
font <- "Arial"
theme_bw() %+replace%
theme(
# Grid elements
panel.grid.minor = element_blank(),                       #strip minor gridlines
panel.grid.major.x = element_blank(),
axis.ticks = element_line(color="#636363",size=0.25),     #smaller axis ticks
axis.line = element_line(color="#636363",size = 0.25),
strip.background = element_blank(),
strip.text = element_text(size=12,color='#636363',hjust=0,face = "bold"),
# Border lines
panel.border = element_blank(),
panel.background = element_blank(),
# Legend
legend.position="right",
legend.title=element_blank(),
legend.key.size = unit(0.5, "cm"),
# Text elements
plot.title = element_text(
family = font,
size = 14,
face = 'bold',
hjust = 0,
vjust = 3,
color = '#636363',
margin = margin(t = 10)),
plot.title = element_text(margin = margin(t = 10)),
plot.subtitle = element_text(
family = font,
size = 12,
hjust = 0,
vjust = 2,
color = '#636363'),
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 0,                #right align
color = '#bdbdbd'),       #color
axis.title = element_blank(),
axis.title = element_text(             #axis titles
family = font,            #font family
size = 10,                #font size
color = '#636363'),       #color
axis.text = element_text(              #axis text
family = font,            #axis famuly
size = 9,                 #font size
color = '#636363'),       #color
axis.text.x = element_text(            #margin for axis text
margin=margin(5, b = 10)),
text = element_text(
family = font,
color = '#636363')
)
}
colours_9_sectors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#818181ff")
colours_9_qual <- c("#ff9055ff", "#659cccff", "#e5b82cff", "#7dd396ff", "#818181ff", "#9467bdff", "#17becfff", "#d45087ff")
# more_set2_colors <- function(number) {
#
#   colors = colorRampPalette(brewer.pal(8, "Set2"))(number)
#
# }
View(theme_wl_emissions)
#library(RColorBrewer)
#ggplot <- function(...) ggplot2::ggplot(...) + scale_fill_brewer(palette="Set2")
theme_wl <- function() {
font <- "sans"
theme_bw() %+replace%
theme(
# Grid elements
panel.grid.minor = element_blank(),    #strip minor gridlines
axis.ticks = element_line(color="#636363",size = 0.7),
# Border lines
panel.border = element_rect(color="#636363",fill=NA,size = 0.7),
panel.background = element_blank(),
# Text elements
plot.title = element_text(             #title
family = font,            #set font family
size = 14,                #set font size
face = 'bold',            #bold typeface
hjust = 0,                #left align
vjust = 3,                #raise slightly
color = '#636363'),       #color
plot.subtitle = element_text(
family = font,
size = 12,
hjust = 0,
vjust = 2,
color = '#636363'),
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 0,                #right align
color = '#bdbdbd'),       #color
axis.title = element_text(             #axis titles
family = font,            #font family
size = 10,                #font size
color = '#636363'),       #color
axis.text = element_text(              #axis text
family = font,            #axis famuly
size = 9,                 #font size
color = '#636363'),       #color
axis.text.x = element_text(            #margin for axis text
margin=margin(5, b = 10)),
text = element_text(
family = font,
color = '#636363')
)
}
theme_wl_emissions <- function() {
font <- "Arial"
theme_bw() %+replace%
theme(
# Grid elements
panel.grid.minor = element_blank(),                       #strip minor gridlines
panel.grid.major.x = element_blank(),
axis.ticks = element_line(color="#636363",size=0.25),     #smaller axis ticks
axis.line = element_line(color="#636363",size = 0.25),
strip.background = element_blank(),
strip.text = element_text(size=12,color='#636363',hjust=0,face = "bold"),
# Border lines
panel.border = element_blank(),
panel.background = element_blank(),
# Legend
legend.position="right",
legend.title=element_blank(),
legend.key.size = unit(0.5, "cm"),
# Text elements
plot.title = element_text(
family = font,
size = 14,
face = 'bold',
hjust = 0,
vjust = 3,
color = '#636363',
margin = margin(t = 10)),
plot.subtitle = element_text(
family = font,
size = 12,
hjust = 0,
vjust = 2,
color = '#636363'),
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
hjust = 0,                #right align
color = '#bdbdbd'),       #color
axis.title = element_blank(),
axis.title = element_text(             #axis titles
family = font,            #font family
size = 10,                #font size
color = '#636363'),       #color
axis.text = element_text(              #axis text
family = font,            #axis famuly
size = 9,                 #font size
color = '#636363'),       #color
axis.text.x = element_text(            #margin for axis text
margin=margin(5, b = 10)),
text = element_text(
family = font,
color = '#636363')
)
}
colours_9_sectors <- c("#365f90ff", "#4672b3ff", "#659cccff", "#a3d3f7ff", "#6ccac8ff", "#e5b82cff", "#4f8455ff", "#6aad75ff", "#818181ff")
colours_9_qual <- c("#ff9055ff", "#659cccff", "#e5b82cff", "#7dd396ff", "#818181ff", "#9467bdff", "#17becfff", "#d45087ff")
# more_set2_colors <- function(number) {
#
#   colors = colorRampPalette(brewer.pal(8, "Set2"))(number)
#
# }
View(theme_wl_emissions)
